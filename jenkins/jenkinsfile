pipeline {
    agent any
    
    environment {
        SERVER_IP = '167.86.100.193'
        SERVER_USER = 'michele'
        SSH_CREDENTIALS_ID = 'pregodi-server-ssh'
        REPO_URL = 'https://github.com/Opensys-Technologies/pregodi-backend.git'
        BRANCH = 'feature/pregodi_deployment'
        GIT_CREDENTIALS_ID = 'd09cd444-4ebd-40a1-8662-152de705af91'
    }
    
    stages {
        stage('Clone') {
            steps {
                checkout scm
            }
        }
        
        stage('Transfer and Build') {
            steps {
                withCredentials([usernamePassword(credentialsId: env.GIT_CREDENTIALS_ID, passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                    sshagent(credentials: [env.SSH_CREDENTIALS_ID]) {
                        sh """
                        ssh -o StrictHostKeyChecking=no -o TCPKeepAlive=yes -o ServerAliveInterval=30 ${SERVER_USER}@${SERVER_IP} '
                            rm -rf /tmp/pregodi-deployment &&
                            mkdir -p /tmp/pregodi-deployment &&
                            cd /tmp/pregodi-deployment &&
                            git clone --branch ${BRANCH} https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/Opensys-Technologies/pregodi-backend.git . &&
                            docker build -t odoo-pregodi:latest -f Dockerfile .
                        '
                        """
                        
                        sh "scp -o StrictHostKeyChecking=no -o TCPKeepAlive=yes -o ServerAliveInterval=30 -r kubernetes ansible ${SERVER_USER}@${SERVER_IP}:/tmp/pregodi-deployment/"
                    }
                }
            }
        }
        
        stage('Deploy with Ansible') {
            steps {
                sshagent(credentials: [env.SSH_CREDENTIALS_ID]) {
                    sh """
                    ssh -o StrictHostKeyChecking=no -o TCPKeepAlive=yes -o ServerAliveInterval=30 ${SERVER_USER}@${SERVER_IP} '
                        cd /tmp/pregodi-deployment &&
                        echo "[servers]" > ansible/local_inventory.ini &&
                        echo "localhost ansible_connection=local ansible_user=michele ansible_python_interpreter=/usr/bin/python3" >> ansible/local_inventory.ini &&
                        ansible-playbook -i ansible/local_inventory.ini ansible/playbook.yml -v
                    '
                    """
                }
            }
        }
    }
    
    post {
        success {
            echo 'Déploiement réussi!'
        }
        failure {
            echo 'Échec du déploiement!'
        }
    }
}